find_package(GTest)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../src/include)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../src/proto-gen)

if (${GTest_FOUND})
    message(STATUS "Using gtest from system")
    include_directories(${GTEST_INCLUDE_DIRS})
else ()
    message(STATUS "Using gtest from source")
    if(NOT googletest_POPULATED)
        FetchContent_Populate(googletest)
        add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR} EXCLUDE_FROM_ALL)
    endif()

    set(GTEST_LIBRARIES gtest)
    set(GMOCK_LIBRARIES gmock)
    set(GTEST_MAIN_LIBRARIES gtest_main)
endif ()

aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/ut ut_files)
add_executable(testing-ut ${ut_files})
target_link_libraries(testing-ut PRIVATE milvus_sdk ${GTEST_LIBRARIES} ${GTEST_MAIN_LIBRARIES} pthread)
gtest_discover_tests(testing-ut)

aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/it it_files)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/it/mocks it_mocks_files)
add_executable(testing-it ${it_files} ${it_mocks_files})
target_link_libraries(testing-it PRIVATE milvus_sdk ${GTEST_LIBRARIES} ${GMOCK_LIBRARIES} ${GTEST_MAIN_LIBRARIES} pthread)
gtest_discover_tests(testing-it)
