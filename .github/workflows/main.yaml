name: Build and test
on:
  push:
    # file paths to consider in the event. Optional; defaults to all.
    paths:
      - 'cmake/**'
      - 'examples/**'
      - 'scripts/**'
      - 'src/**'
      - 'test/**'
      - 'thirdparty/**'
      - '.github/workflows/main.yaml'
      - '!**.md'
      - '.clang-format'
      - '.clang-tidy'
  pull_request:
    # file paths to consider in the event. Optional; defaults to all.
    paths:
      - 'cmake/**'
      - 'examples/**'
      - 'scripts/**'
      - 'src/**'
      - 'test/**'
      - 'thirdparty/**'
      - '.github/workflows/main.yaml'
      - '!**.md'
      - '.clang-format'
      - '.clang-tidy'

jobs:
  ubuntu:
    name: Build and test AMD64 Ubuntu ${{ matrix.ubuntu }}
    runs-on: ubuntu-latest
    container: ubuntu:${{ matrix.ubuntu }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [18.04, 20.04]
    env:
      UBUNTU: ${{ matrix.ubuntu }}
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: ubuntu-${{ matrix.ubuntu }}-ccache-${{ github.sha }}
          restore-keys: ubuntu-${{ matrix.ubuntu }}-ccache-
      - name: Cache apk
        uses: actions/cache@v2
        with:
          path: |
            /var/cache/apt/archives
          key: ubuntu-${{ matrix.ubuntu }}-apt-${{ github.sha }}
          restore-keys: ubuntu-${{ matrix.ubuntu }}-apt-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: Build
        run: |
          make
      - name: Lint
        run: |
          make lint
      - name: Uint Testing
        run: |
          make coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          files: ./code_coverage/lcov_output.info
          name: ubuntu-${{ matrix.ubuntu }}-coverage
  centos:
    name: Build and test AMD64 CentOS ${{ matrix.centos }}
    runs-on: ubuntu-latest
    container: centos:${{ matrix.centos }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        centos: [7]
    env:
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: centos-${{ matrix.centos }}-ccache-${{ github.sha }}
          restore-keys: centos-${{ matrix.centos }}-ccache-
      - name: Cache rpm
        uses: actions/cache@v2
        with:
          path: |
            /var/cache/yum
          key: centos-${{ matrix.centos }}-rpm-${{ github.sha }}
          restore-keys: centos-${{ matrix.centos }}-rpm-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: Build
        run: |
          make
      - name: Uint Testing
        run: |
          make test
  macos:
    name: Build and test macOS ${{ matrix.macos }}
    runs-on: macos-${{ matrix.macos }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        macos: [11]
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_CPP2: true
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.ccache
          key: macos-${{ matrix.macos }}-ccache-${{ github.sha }}
          restore-keys: macos-${{ matrix.macos }}-ccache-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: Build
        run: |
          make
      - name: Uint Testing
        run: |
          make test
  ubuntu-st:
    name: Acceptance Test Ubuntu ${{ matrix.ubuntu }}
    runs-on: ubuntu-${{ matrix.ubuntu }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [18.04]
    env:
      UBUNTU: ${{ matrix.ubuntu }}
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: ubuntu-${{ matrix.ubuntu }}-ccache-${{ github.sha }}
          restore-keys: ubuntu-${{ matrix.ubuntu }}-ccache-
      - name: Cache apk
        uses: actions/cache@v2
        with:
          path: |
            /var/cache/apt/archives/*.deb
          key: ubuntu-${{ matrix.ubuntu }}-apt-${{ github.sha }}
          restore-keys: ubuntu-${{ matrix.ubuntu }}-apt-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: System Test
        run: |
          make st
  ubuntu-deb:
    name: Package AMD64 Ubuntu ${{ matrix.ubuntu }}
    runs-on: ubuntu-latest
    container: ubuntu:${{ matrix.ubuntu }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [18.04, 20.04]
    env:
      UBUNTU: ${{ matrix.ubuntu }}
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: ubuntu-${{ matrix.ubuntu }}-ccache-${{ github.sha }}
          restore-keys: ubuntu-${{ matrix.ubuntu }}-ccache-
      - name: Cache apk
        uses: actions/cache@v2
        with:
          path: |
            /var/cache/apt/archives
          key: ubuntu-${{ matrix.ubuntu }}-apt-${{ github.sha }}
          restore-keys: ubuntu-${{ matrix.ubuntu }}-apt-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: Package
        run: |
          make package
      - name: Build with examples
        run: |
          set -e
          dpkg -i cmake_build/src/Pack/libmilvus*amd64.deb
          mkdir -p cmake_build_example
          cd cmake_build_example
          cmake ../examples
          make -j
  centos-rpm:
    name: Package AMD64 CentOS ${{ matrix.centos }}
    runs-on: ubuntu-latest
    container: centos:${{ matrix.centos }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        centos: [7]
    env:
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: centos-${{ matrix.centos }}-ccache-${{ github.sha }}
          restore-keys: centos-${{ matrix.centos }}-ccache-
      - name: Cache rpm
        uses: actions/cache@v2
        with:
          path: |
            /var/cache/yum
          key: centos-${{ matrix.centos }}-rpm-${{ github.sha }}
          restore-keys: centos-${{ matrix.centos }}-rpm-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: Package
        run: |
          make package
      - name:  Build with examples
        run: |
          set -e
          yum install -y cmake_build/src/Pack/libmilvus{-devel,}-2*el*.rpm
          mkdir -p cmake_build_example
          cd cmake_build_example
          cmake ../examples
          make -j

