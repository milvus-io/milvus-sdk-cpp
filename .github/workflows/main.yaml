name: Build and test
on:
  push:
    # file paths to consider in the event. Optional; defaults to all.
    paths:
      - 'cmake/**'
      - 'examples/**'
      - 'scripts/**'
      - 'src/**'
      - 'test/**'
      - 'thirdparty/**'
      - '.github/workflows/main.yaml'
      - '!**.md'
      - '.clang-format'
      - '.clang-tidy'
  pull_request:
    # file paths to consider in the event. Optional; defaults to all.
    paths:
      - 'cmake/**'
      - 'examples/**'
      - 'scripts/**'
      - 'src/**'
      - 'test/**'
      - 'thirdparty/**'
      - '.github/workflows/main.yaml'
      - '!**.md'
      - '.clang-format'
      - '.clang-tidy'

jobs:
  linux:
    name: Build and test AMD64 ${{ matrix.os.distro }} ${{ matrix.os.version }}
    runs-on: ubuntu-latest
    container: ${{ matrix.os.image }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        os:
          - distro: Ubuntu
            version: 18.04
            image: ubuntu:18.04
            key: u1804
          - distro: Ubuntu
            version: 20.04
            image: ubuntu:20.04
            key: u2004
          - distro: CentOS
            version: 7
            image: centos:7
            key: c7
          - distro: Fedora
            version: 34
            image: fedora:34
            key: fc34
          - distro: Fedora
            version: 35
            image: fedora:35
            key: fc35
    env:
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: linux-${{ matrix.os.key }}-ccache-${{ github.sha }}
          restore-keys: linux-${{ matrix.os.key }}-ccache-
      - name: Cache apk
        uses: actions/cache@v2
        if: ${{ matrix.os.distro }} == "Ubuntu"
        with:
          path: |
            /var/cache/apt/archives
          key: linux-${{ matrix.os.key }}-ccache-${{ github.sha }}
          restore-keys: linux-${{ matrix.os.key }}-ccache-
      - name: Cache rpm
        uses: actions/cache@v2
        if: ${{ matrix.os.distro == 'CentOS' || matrix.os.distro == 'Fedora' }}
        with:
          path: |
            /var/cache/yum
          key: linux-${{ matrix.os.key }}-rpm-${{ github.sha }}
          restore-keys: linux-${{ matrix.os.key }}-rpm-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: Build
        run: |
          make
      - name: Lint
        if: ${{ matrix.os.distro == 'Ubuntu' }}
        run: |
          make lint
      - name: Uint Testing
        if: ${{ matrix.os.key != 'u2004' }}
        run: |
          make test
      - name: Uint Testing With Coverage
        if: ${{ matrix.os.key == 'u2004' }}
        run: |
          make coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v2
        if: ${{ matrix.os.key == 'u2004' }}
        with:
          files: ./code_coverage/lcov_output.info
          name: ubuntu-${{ matrix.ubuntu }}-coverage
      - name: Build Packages
        run: |
          make package
      - name: Build with examples apk
        if: ${{ matrix.os.distro == 'Ubuntu' }}
        run: |
          set -e
          dpkg -i cmake_build/src/Pack/libmilvus*amd64.deb
          mkdir -p cmake_build_example
          cd cmake_build_example
          cmake ../examples
          make -j
      - name: Build with examples rpm
        if: ${{ matrix.os.distro == 'CentOS' || matrix.os.distro == 'Fedora' }}
        run: |
          set -e
          yum install -y cmake_build/src/Pack/libmilvus{-devel,}-2*.rpm
          mkdir -p cmake_build_example
          cd cmake_build_example
          cmake ../examples
          make -j
  st-ubuntu:
    name: Acceptance Test Ubuntu ${{ matrix.ubuntu }}
    runs-on: ubuntu-${{ matrix.ubuntu }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        ubuntu: [18.04]
    env:
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.ccache
          key: ubuntu-${{ matrix.ubuntu }}-ccache-${{ github.sha }}
          restore-keys: ubuntu-${{ matrix.ubuntu }}-ccache-
      - name: Cache apk
        uses: actions/cache@v2
        with:
          path: |
            /var/cache/apt/archives/*.deb
          key: ubuntu-${{ matrix.ubuntu }}-apt-${{ github.sha }}
          restore-keys: ubuntu-${{ matrix.ubuntu }}-apt-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: System Test
        run: |
          make st
  macos:
    name: Build and test macOS ${{ matrix.macos }}
    runs-on: macos-${{ matrix.macos }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        macos: [11]
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_COMPILERCHECK: content
      CCACHE_COMPRESS: 1
      CCACHE_CPP2: true
      CCACHE_COMPRESSLEVEL: 5
      CCACHE_MAXSIZE: 2G
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache ccache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.ccache
          key: macos-${{ matrix.macos }}-ccache-${{ github.sha }}
          restore-keys: macos-${{ matrix.macos }}-ccache-
      - name: Prepare
        run: |
          sh scripts/install_deps.sh
      - name: Build
        run: |
          make
      - name: Uint Testing
        run: |
          make test
